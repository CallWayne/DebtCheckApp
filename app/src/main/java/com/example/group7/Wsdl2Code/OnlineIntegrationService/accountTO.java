package com.example.group7.Wsdl2Code.OnlineIntegrationService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/31/2016 1:56:47 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.example.group7.Wsdl2Code.OnlineIntegrationService.VectoraccountTOEntry;
import com.example.group7.Wsdl2Code.OnlineIntegrationService.VectoraccountTOEntry1;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;


public class accountTO implements KvmSerializable {
    
    public VectoraccountTOEntry claims;
    public VectoraccountTOEntry1 debts;
    public int id;
    public String email;
    public String password;
    public String userName;
    
    public accountTO(){}
    
    public accountTO(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("claims"))
        {
            //SoapObject j = (SoapObject)soapObject.getProperty("claims");
            claims = new VectoraccountTOEntry(soapObject);
        }
        if (soapObject.hasProperty("debts"))
        {
            //SoapObject j = (SoapObject)soapObject.getProperty("debts");
            debts = new VectoraccountTOEntry1(soapObject);
        }
        if (soapObject.hasProperty("id"))
        {
            Object obj = soapObject.getProperty("id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                id = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("userName"))
        {
            Object obj = soapObject.getProperty("userName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                userName = j.toString();
            }else if (obj!= null && obj instanceof String){
                userName = (String) obj;
            }
        }
        if (soapObject.hasProperty("email"))
        {
            Object obj = soapObject.getProperty("email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                email = j.toString();
            }else if (obj!= null && obj instanceof String){
                email = (String) obj;
            }
        }
        if (soapObject.hasProperty("password"))
        {
            Object obj = soapObject.getProperty("password");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                password = j.toString();
            }else if (obj!= null && obj instanceof String){
                password = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return claims;
            case 1:
                return debts;
            case 2:
                return id;
            case 3:
                return email;
            case 4:
                return password;
            case 5:
                return userName;

        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "claims";
                break;
            case 1:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "debts";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "id";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "email";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "password";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "userName";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
