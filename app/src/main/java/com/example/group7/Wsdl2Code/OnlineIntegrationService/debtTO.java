package com.example.group7.Wsdl2Code.OnlineIntegrationService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 5/31/2016 1:56:47 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class debtTO implements KvmSerializable {
    

    //public boolean amountSpecified;
    public int id;
    //public int ownerId;
    public double amount;
    public String reason;
    public String debtor;
    public String creditor;
    
    public debtTO(){}
    
    public debtTO(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("id"))
        {
            Object obj = soapObject.getProperty("id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                id = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("amount"))
        {
            Object obj = soapObject.getProperty("amount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                amount = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                amount = (Double) obj;
            }
        }
        /*if (soapObject.hasProperty("amountSpecified"))
        {
            Object obj = soapObject.getProperty("amountSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                amountSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                amountSpecified = (Boolean) obj;
            }
        }*/
        /*if (soapObject.hasProperty("ownerId"))
        {
            Object obj = soapObject.getProperty("ownerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ownerId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                ownerId = (Integer) obj;
            }
        }*/
        if (soapObject.hasProperty("reason"))
        {
            Object obj = soapObject.getProperty("reason");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                reason = j.toString();
            }else if (obj!= null && obj instanceof String){
                reason = (String) obj;
            }
        }
        if (soapObject.hasProperty("debtor"))
        {
            Object obj = soapObject.getProperty("debtor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                debtor = j.toString();
            }else if (obj!= null && obj instanceof String){
                debtor = (String) obj;
            }
        }
        if (soapObject.hasProperty("creditor"))
        {
            Object obj = soapObject.getProperty("creditor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                creditor = j.toString();
            }else if (obj!= null && obj instanceof String){
                creditor = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return id;
            case 1:
                return amount;
            case 2:
                return reason;
            case 3:
                return debtor;
            case 4:
                return creditor;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 5;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "id";
                break;
            case 1:
                info.type = Double.class;
                info.name = "amount";
                break;
                //info.type = PropertyInfo.BOOLEAN_CLASS;
                //info.name = "amountSpecified";
                //break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "reason";
                break;
            case 3:
                //info.type = PropertyInfo.INTEGER_CLASS;
                //info.name = "ownerId";
                //break;
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "debtor";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "creditor";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
